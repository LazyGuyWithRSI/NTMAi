class NTM_GrenadeItem : CustomInventory {
	Default {
		Scale 0.625;
		Tag "Hand Grenade";
		Inventory.MaxAmount 20;
		Inventory.InterHubAmount 0x7FFFFFFF;
		Inventory.Icon "NGRIB0";
		Inventory.PickupMessage "Picked up a hand grenade.";
		
		+Inventory.InvBar
	}
	
	States {
		Spawn:
			NGRI A -1;
			Stop;
		
		Use:
			TNT1 A 0 {
				EventHandler.SendNetworkEvent("NTM_UseGrenade");
			}
			
			Fail;
	}
}

class NTM_GrenadeThrow : Weapon {
	class<Weapon> prevWeapon;
	
	Default {
		Tag "Grenade!";
		Weapon.SlotNumber 0;
		
		+Weapon.CheatNotWeapon
		+Weapon.No_Auto_Switch
		+Weapon.NoAutoFire
		+Weapon.Explosive
		+Inventory.Undroppable
		+Inventory.Untossable
	}
	
	States {
		Select:
			NGRG A 1 A_Raise(11);
			Loop;
		
		Deselect:
		Ready:
		Fire:
			NGRG A 0 A_WeaponOffset();
			NGRG BC 3;
			NGRG D 3 A_StartSound("NTM_Grenade/pin");
			NGRG EF 3;
			NGRG FFFFFFFF 1 A_WeaponOffset(0, 11, WOF_Add);
			
			NGRG F 0 {
				if (!sv_infiniteAmmo) {
					A_TakeInventory("NTM_GrenadeItem", 1);
				}
				
				AddZ(32);
				
				Actor grenade = SpawnSubMissile("NTM_Grenade", self);
				
				AddZ(-32);
				grenade.vel.z = -clamp(tan(pitch), -4, 4) * grenade.speed + 4;
				A_SelectWeapon(invoker.prevWeapon, SWF_SelectPriority);
				A_TakeInventory("NTM_GrenadeThrow");
			}
			
			Stop;
	}
}

class NTM_Grenade : Actor {
	Default {
		Radius 4;
		Height 4;
		Scale 0.3;
		Speed 18;
		Damage 25;
		Gravity 0.5;
		BounceType "Doom";
		BounceSound "NTM_Grenade/bounce";
		BounceFactor 0.5;
		BounceCount 3;
		Projectile;
		
		+CanBounceWater
		-NoGravity
		-NoTeleport
		+DontBlast
		+ForceXYBillboard
		+DontBounceOnSky
		+DontBounceOnShootables
		+UseBounceState
	}
	
	States {
		Spawn:
		Bounce:
			NGRE ABCDEFABCDEFABCDEF 3;
		Death:
			TNT1 A 0 A_Explode(72, 128);
			TNT1 A 0 A_Explode(72, 160);
			TNT1 A 0 A_StartSound("world/barrelx", 5, 0, 1, Attn_Norm, FRandom(0.8, 1.2));
			TNT1 A 0 A_SpawnItemEx("NTM_Explosion2");
			TNT1 A 15 A_Quake(2, 15, 0, 800, "");
			Stop;
	}
}